version: '3.4'

services:
  nginx:
    image: nginx:1.21.6
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ../../../../ssl/vp1ska.ru.crt:/etc/nginx/vp1ska.ru.crt
      - ../../../../ssl/vp1ska.ru.key:/etc/nginx/vp1ska.ru.key
    ports:
      - "80:80"
      - "443:443"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          memory: 1024M
          cpus: "1.0"
        reservations:
          memory: 512M
          cpus: "0.5"

  mongo:
    image: mongo:4.4.10
    environment:
      - MONGO_INITDB_ROOT_USERNAME=kekit*
      - MONGO_INITDB_ROOT_PASSWORD=qweasd123*
    ports:
      - "27017:27017"
    volumes:
      - /home/vpiska/data/mongo:/data/db
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          memory: 1024M
          cpus: "1.0"
        reservations:
          memory: 512M
          cpus: "0.5"

  api:
    image: api
    environment:
      - SERVER_PORT=5000
      - DB_CONNECTION=mongodb://kekit*:qweasd123*@mongo:27017
      - DB_NAME=vpiska
      - JWT_KEY=vpiska_secretkey!123
      - JWT_ISSUER=VpiskaServer
      - JWT_AUDIENCE=VpiskaClient
      - JWT_LIFETIME_DAYS=3
      - HASH_KEY=fbac497e4b44564f831f78d539b81a0c
    volumes:
      - /home/vpiska/data/media:/app/media
      - /home/vpiska/data/logs:/app/logs
    build:
      context: ..
      dockerfile: Dockerfile
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          memory: 10240M
          cpus: "3"
        reservations:
          memory: 5120M
          cpus: "1.5"