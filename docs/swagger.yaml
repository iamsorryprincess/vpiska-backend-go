basePath: /api
definitions:
  v1.apiResponse:
    properties:
      errors:
        items:
          $ref: '#/definitions/v1.errorResponse'
        type: array
      isSuccess:
        type: boolean
      result: {}
    type: object
  v1.changePasswordRequest:
    properties:
      confirmPassword:
        type: string
      password:
        type: string
    type: object
  v1.chatMessage:
    properties:
      message:
        type: string
      userId:
        type: string
      userImageId:
        type: string
      userName:
        type: string
    type: object
  v1.coordinates:
    properties:
      x:
        type: number
      "y":
        type: number
    type: object
  v1.createEventRequest:
    properties:
      address:
        type: string
      coordinates:
        $ref: '#/definitions/v1.coordinates'
      name:
        type: string
    type: object
  v1.createUserRequest:
    properties:
      confirmPassword:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
    type: object
  v1.errorResponse:
    properties:
      errorCode:
        type: string
    type: object
  v1.eventIDRequest:
    properties:
      eventId:
        type: string
    type: object
  v1.eventRangeData:
    properties:
      coordinates:
        $ref: '#/definitions/v1.coordinates'
      id:
        type: string
      name:
        type: string
      usersCount:
        type: integer
    type: object
  v1.eventResponse:
    properties:
      address:
        type: string
      chatMessages:
        items:
          $ref: '#/definitions/v1.chatMessage'
        type: array
      coordinates:
        $ref: '#/definitions/v1.coordinates'
      id:
        type: string
      media:
        items:
          $ref: '#/definitions/v1.mediaInfo'
        type: array
      name:
        type: string
      ownerId:
        type: string
      usersCount:
        type: integer
    type: object
  v1.fileMetadataResponse:
    properties:
      contentType:
        type: string
      id:
        type: string
      name:
        type: string
      size:
        type: integer
    type: object
  v1.getByRangeRequest:
    properties:
      coordinates:
        $ref: '#/definitions/v1.coordinates'
      horizontalRange:
        type: number
      verticalRange:
        type: number
    type: object
  v1.loginResponse:
    properties:
      accessToken:
        type: string
      eventId:
        type: string
      id:
        type: string
      imageId:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  v1.loginUserRequest:
    properties:
      password:
        type: string
      phone:
        type: string
    type: object
  v1.mediaInfo:
    properties:
      contentType:
        type: string
      id:
        type: string
    type: object
  v1.setImageResponse:
    properties:
      accessToken:
        type: string
      imageId:
        type: string
    type: object
  v1.tokenResponse:
    properties:
      accessToken:
        type: string
    type: object
  v1.updateUserRequest:
    properties:
      name:
        type: string
      phone:
        type: string
    type: object
info:
  contact: {}
  description: API vpiska.ru
  title: Swagger UI
  version: "1.0"
paths:
  /v1/events/close:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.eventIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/v1.apiResponse'
            - properties:
                result:
                  type: string
              type: object
      security:
      - UserAuth: []
      summary: Закрыть эвент
      tags:
      - events
  /v1/events/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.createEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/v1.apiResponse'
            - properties:
                result:
                  $ref: '#/definitions/v1.eventResponse'
              type: object
      security:
      - UserAuth: []
      summary: Создать эвент
      tags:
      - events
  /v1/events/get:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.eventIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/v1.apiResponse'
            - properties:
                result:
                  $ref: '#/definitions/v1.eventResponse'
              type: object
      summary: Получить эвент по идентификатору
      tags:
      - events
  /v1/events/range:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.getByRangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/v1.apiResponse'
            - properties:
                result:
                  $ref: '#/definitions/v1.eventRangeData'
              type: object
      summary: Получить эвенты по области
      tags:
      - events
  /v1/media:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/v1.apiResponse'
            - properties:
                result:
                  type: string
              type: object
      summary: Загрузить медиафайл
      tags:
      - media
  /v1/media/{id}:
    delete:
      consumes:
      - '*/*'
      parameters:
      - description: media ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/v1.apiResponse'
            - properties:
                result:
                  type: string
              type: object
      summary: Удалить файл
      tags:
      - media
    get:
      consumes:
      - '*/*'
      parameters:
      - description: media ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
      summary: Получить медиафайл
      tags:
      - media
  /v1/media/metadata/{id}:
    get:
      consumes:
      - '*/*'
      parameters:
      - description: media ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/v1.apiResponse'
            - properties:
                result:
                  $ref: '#/definitions/v1.fileMetadataResponse'
              type: object
      summary: Получить метаинформацию о файле
      tags:
      - media
  /v1/users/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.createUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/v1.apiResponse'
            - properties:
                result:
                  $ref: '#/definitions/v1.loginResponse'
              type: object
      summary: Создать пользователя
      tags:
      - users
  /v1/users/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.loginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/v1.apiResponse'
            - properties:
                result:
                  $ref: '#/definitions/v1.loginResponse'
              type: object
      summary: Войти в систему
      tags:
      - users
  /v1/users/media/set:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: file
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/v1.apiResponse'
            - properties:
                result:
                  $ref: '#/definitions/v1.setImageResponse'
              type: object
      security:
      - UserAuth: []
      summary: Установить пользователю картинку
      tags:
      - users
  /v1/users/password/change:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.changePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/v1.apiResponse'
            - properties:
                result:
                  $ref: '#/definitions/v1.tokenResponse'
              type: object
      security:
      - UserAuth: []
      summary: Изменить пароль
      tags:
      - users
  /v1/users/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        schema:
          $ref: '#/definitions/v1.updateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/v1.apiResponse'
            - properties:
                result:
                  $ref: '#/definitions/v1.tokenResponse'
              type: object
      security:
      - UserAuth: []
      summary: Обновить информацию о пользователе
      tags:
      - users
securityDefinitions:
  UserAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
